<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.10.1 on win32)" generated="20220302 20:58:54.970" rpa="false" schemaversion="2">
<suite id="s1" name="TC1 Get Request" source="C:\Users\milad\Desktop\Project_RestAPI\ProjectApi\TeseCases\Scenario1\TC1_Get_Request.robot">
<test id="s1-t1" name="TC_Get_Request">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${Base_Url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220302 20:58:56.140" level="INFO">Creating Session using : alias=mysession, url=https://gorest.co.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220302 20:58:56.139" endtime="20220302 20:58:56.141"/>
</kw>
<kw name="Update Session" library="RequestsLibrary">
<var>${header}</var>
<arg>mysession</arg>
<arg>Accept=application/json</arg>
<arg>Content-type=application/json</arg>
<doc>Updates HTTP Session Headers and Cookies.</doc>
<msg timestamp="20220302 20:58:56.144" level="INFO">${header} = None</msg>
<status status="PASS" starttime="20220302 20:58:56.142" endtime="20220302 20:58:56.144"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${Get_Response}</var>
<arg>mysession</arg>
<arg>/public/v1/posts/123/comments</arg>
<arg>headers=${header}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220302 20:58:57.722" level="INFO">GET Request : url=https://gorest.co.in/public/v1/posts/123/comments 
 path_url=/public/v1/posts/123/comments 
 headers={} 
 body=None 
 </msg>
<msg timestamp="20220302 20:58:57.723" level="INFO">GET Response : url=https://gorest.co.in/public/v1/posts/123/comments 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Wed, 02 Mar 2022 17:28:56 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding, Origin', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'ETag': 'W/"996e3e39561b73e0aaf72fec3fa2ca2d"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': '6dfc194a-e54c-4da7-af3b-272edfbf6655', 'X-Runtime': '0.004671', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains'} 
 body={"meta":{"pagination":{"total":0,"pages":0,"page":1,"limit":20,"links":{"previous":null,"current":null,"next":null}}},"data":[]} 
 </msg>
<msg timestamp="20220302 20:58:57.724" level="INFO">C:\Program Files\Python310\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220302 20:58:57.727" level="INFO">${Get_Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220302 20:58:56.145" endtime="20220302 20:58:57.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${Get_Response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220302 20:58:57.735" level="INFO">${json_response} = {'meta': {'pagination': {'total': 0, 'pages': 0, 'page': 1, 'limit': 20, 'links': {'previous': None, 'current': None, 'next': None}}}, 'data': []}</msg>
<status status="PASS" starttime="20220302 20:58:57.729" endtime="20220302 20:58:57.735"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Get_Response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220302 20:58:57.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 20:58:57.737" endtime="20220302 20:58:57.743"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${page_key}</var>
<arg>${json_response}</arg>
<arg>$.meta.pagination.page</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220302 20:58:57.906" level="INFO">${page_key} = [1]</msg>
<status status="PASS" starttime="20220302 20:58:57.745" endtime="20220302 20:58:57.906"/>
</kw>
<kw name="Convert JSON To String" library="JSONLibrary">
<var>${Convert_Page_Object}</var>
<arg>${page_key}</arg>
<doc>Convert JSON object to string</doc>
<msg timestamp="20220302 20:58:57.914" level="INFO">${Convert_Page_Object} = [1]</msg>
<status status="PASS" starttime="20220302 20:58:57.909" endtime="20220302 20:58:57.914"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${page_key}</arg>
<arg>[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220302 20:58:57.917" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 20:58:57.916" endtime="20220302 20:58:57.917"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${data_array}</var>
<arg>${json_response}</arg>
<arg>data</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220302 20:58:58.044" level="INFO">${data_array} = [[]]</msg>
<status status="PASS" starttime="20220302 20:58:57.930" endtime="20220302 20:58:58.044"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${data_array}</arg>
<arg>[[]]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220302 20:58:58.047" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 20:58:58.046" endtime="20220302 20:58:58.047"/>
</kw>
<status status="PASS" starttime="20220302 20:58:56.137" endtime="20220302 20:58:58.048"/>
</test>
<status status="PASS" starttime="20220302 20:58:54.980" endtime="20220302 20:58:58.059"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="TC1 Get Request">TC1 Get Request</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
